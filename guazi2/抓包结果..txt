没什么好说的 :D，直接贴url，没特别说明的就默认返回json字符串，解析的话自己抓抓包就好了
抓包的话可以安利个fiddler


获取房间cid:
HTTP GET : http://live.bilibili.com/[房间cid或id]
从里面找出var cid = xxxxx...
注意房间id和房间的cid还是会有不同的，不过在这里就算是替换了b站也会做302跳转的

获取房间信息：
HTTP GET : http://live.bilibili.com/live/getInfo?roomid=[房间cid]

宝箱相关:

获取新的宝箱任务:
HTTP GET : http://live.bilibili.com/FreeSilver/getCurrentTask

验证图片:
HTTP GET : http://live.bilibili.com/FreeSilver/getCaptcha?ts=[当前时间戳]

领取宝箱:
HTTP GET: http://live.bilibili.com/FreeSilver/getAward?time_start=[宝箱任务的开始时间]&time_end=[宝箱任务的结束时间]&captcha=验证码



签到相关:

签到:
HTTP GET: http://api.live.bilibili.com/sign/doSign
获取签到状态:
HTTP GET: http://api.live.bilibili.com/sign/GetSignInfo



道具相关:

领取每日道具:
HTTP GET: http://api.live.bilibili.com/giftBag/sendDaily

获取用户道具背包
HTTP GET: http://api.live.bilibili.com/gift/playerBag

发送道具
HTTP POST: http://api.live.bilibili.com/giftBag/send
POST的Content-Type: application/x-form-urlencoded
POST的数据:giftId=[道具id]&roomid=[要赠送的房间的id]&ruid=[房间数据下的MASTERID(见房间数据获取)]&num=[赠送的数量]&coinType=silver&Bag_id=[获取背包道具时该道具的id]&timestamp=[当前unix时间戳]&rnd=[随机数]&token=[Cookie下的LIVE_LOGIN_DATA]


下载视频（录播）

获取下载url:
HTTP GET: http://live.bilibili.com/api/playurl?player=1&cid=[房间cid]&quality=0
返回数据是xml文档
url在<video> --> <durl> --> <url>里


轮播详情:
HTTP GET: http://live.bilibili.com/live/getRoundPlayVideo?room_id=[房间cid]&a=[随机0-1double]
注：轮播的视频地址也是在上面得到的


挂经验
HTTP POST: http://api.live.bilibili.com/User/userOnlineHeart
5分钟发一次，只要post就好了，没有要发送的内容
注意要使用xhr格式把referer加上

目前的限时活动
HTTP POST: http://api.live.bilibili.com/eventRoom/heart
同上

弹幕发送

HTTP POST: http://live.bilibili.com/msg/send
POST的Content-Type: application/x-form-urlencoded
POST的数据:color=[弹幕颜色(rrggbb)]&fontsize=[字体大小]&mode=1&msg=[弹幕内容]&rnd=[随机数]&roomid=[房间cid]
很搞笑的一点就是老爷特有的红色弹幕这里可以直接改，b站的程序员也是懒，这种越权漏洞简直……
不过其他好像就不行了……比如超字数，或者是年费的那种蓝色……一切待尝试啊……


弹幕接收

SOCKET: livecmt-2.bilibili.com:788

(在获取用户播放数据时会给出域名，不过也可以默认这个)
可以先dns解析 :D, 转为 x.x.x.x:x

然后就捣鼓套接字了

连接成功后要发送的数据(data)有{"roomid":[房间cid号],"uid":[你的账号uid]}
然后就把data转成byte array

再构建发送信息:
偏移量	数据类型	数据
0		uint32		16+数据的字节长度(total length)
4		uint16		数据头长度(head length)，默认16(0x00 10)
6		uint16		版本信息，默认1(0x00 01)
8		uint32		请求类型，默认7(0x00 00 00 07)
12		uint32		另外一个参数，默认1(0x00 01)
16		byte[]		发送的数据



当然还有个10s间隔的心跳包，不过这就没这么复杂了
直接发送以下16字节:
00 00 00 10 00 10 00 01 00 00 00 02 00 00 00 01

当然解析同上，只不过少了byte[]部分，请求类型有所变化而已


最后还有个解析接收的数据就行了
前面16个字节的解析依旧如上，不过请求类型换成了接收的数据类型
3的话就是在线人数，数据只含一个uint32类型的人数
5的话是字符串，数据是utf8编码的string，可以扔去json解析了
不过有点蛋疼就是b站有时会把一条信息截成两条，所以处理时有必要识别是否缺失数据……